// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TimeSpan : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public TimeSpan __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Milliseconds { get { return __p.bb.GetLong(__p.bb_pos + 0); } }

  public static Offset<SF.Flat.TimeSpan> CreateTimeSpan(FlatBufferBuilder builder, long Milliseconds) {
    builder.Prep(8, 8);
    builder.PutLong(Milliseconds);
    return new Offset<SF.Flat.TimeSpan>(builder.Offset);
  }
}


}
