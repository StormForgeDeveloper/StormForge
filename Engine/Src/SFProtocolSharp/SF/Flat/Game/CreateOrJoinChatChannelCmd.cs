// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CreateOrJoinChatChannelCmd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static CreateOrJoinChatChannelCmd GetRootAsCreateOrJoinChatChannelCmd(ByteBuffer _bb) { return GetRootAsCreateOrJoinChatChannelCmd(_bb, new CreateOrJoinChatChannelCmd()); }
  public static CreateOrJoinChatChannelCmd GetRootAsCreateOrJoinChatChannelCmd(ByteBuffer _bb, CreateOrJoinChatChannelCmd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CreateOrJoinChatChannelCmd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ChannelName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChannelNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetChannelNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetChannelNameArray() { return __p.__vector_as_array<byte>(4); }
  public string Passcode { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPasscodeBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPasscodeBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPasscodeArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<SF.Flat.Game.CreateOrJoinChatChannelCmd> CreateCreateOrJoinChatChannelCmd(FlatBufferBuilder builder,
      StringOffset channel_nameOffset = default(StringOffset),
      StringOffset passcodeOffset = default(StringOffset)) {
    builder.StartTable(2);
    CreateOrJoinChatChannelCmd.AddPasscode(builder, passcodeOffset);
    CreateOrJoinChatChannelCmd.AddChannelName(builder, channel_nameOffset);
    return CreateOrJoinChatChannelCmd.EndCreateOrJoinChatChannelCmd(builder);
  }

  public static void StartCreateOrJoinChatChannelCmd(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddChannelName(FlatBufferBuilder builder, StringOffset channelNameOffset) { builder.AddOffset(0, channelNameOffset.Value, 0); }
  public static void AddPasscode(FlatBufferBuilder builder, StringOffset passcodeOffset) { builder.AddOffset(1, passcodeOffset.Value, 0); }
  public static Offset<SF.Flat.Game.CreateOrJoinChatChannelCmd> EndCreateOrJoinChatChannelCmd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.Game.CreateOrJoinChatChannelCmd>(o);
  }
}


static public class CreateOrJoinChatChannelCmdVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ChannelName*/, false)
      && verifier.VerifyString(tablePos, 6 /*Passcode*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
