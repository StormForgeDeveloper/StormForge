// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RequestGameMatchCmd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static RequestGameMatchCmd GetRootAsRequestGameMatchCmd(ByteBuffer _bb) { return GetRootAsRequestGameMatchCmd(_bb, new RequestGameMatchCmd()); }
  public static RequestGameMatchCmd GetRootAsRequestGameMatchCmd(ByteBuffer _bb, RequestGameMatchCmd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RequestGameMatchCmd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte NumPlayer { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte RequestRole { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<SF.Flat.Game.RequestGameMatchCmd> CreateRequestGameMatchCmd(FlatBufferBuilder builder,
      byte num_player = 0,
      byte request_role = 0) {
    builder.StartTable(2);
    RequestGameMatchCmd.AddRequestRole(builder, request_role);
    RequestGameMatchCmd.AddNumPlayer(builder, num_player);
    return RequestGameMatchCmd.EndRequestGameMatchCmd(builder);
  }

  public static void StartRequestGameMatchCmd(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddNumPlayer(FlatBufferBuilder builder, byte numPlayer) { builder.AddByte(0, numPlayer, 0); }
  public static void AddRequestRole(FlatBufferBuilder builder, byte requestRole) { builder.AddByte(1, requestRole, 0); }
  public static Offset<SF.Flat.Game.RequestGameMatchCmd> EndRequestGameMatchCmd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.Game.RequestGameMatchCmd>(o);
  }
}


static public class RequestGameMatchCmdVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*NumPlayer*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*RequestRole*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
