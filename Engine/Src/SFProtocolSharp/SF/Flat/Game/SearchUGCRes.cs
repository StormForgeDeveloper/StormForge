// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SearchUGCRes : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static SearchUGCRes GetRootAsSearchUGCRes(ByteBuffer _bb) { return GetRootAsSearchUGCRes(_bb, new SearchUGCRes()); }
  public static SearchUGCRes GetRootAsSearchUGCRes(ByteBuffer _bb, SearchUGCRes obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SearchUGCRes __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSearchUGCRes(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<SF.Flat.Game.SearchUGCRes> EndSearchUGCRes(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.Game.SearchUGCRes>(o);
  }
}


static public class SearchUGCResVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
