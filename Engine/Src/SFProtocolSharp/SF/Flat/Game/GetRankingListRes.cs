// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GetRankingListRes : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static GetRankingListRes GetRootAsGetRankingListRes(ByteBuffer _bb) { return GetRootAsGetRankingListRes(_bb, new GetRankingListRes()); }
  public static GetRankingListRes GetRootAsGetRankingListRes(ByteBuffer _bb, GetRankingListRes obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetRankingListRes __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Result { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public SF.Flat.TotalRankingPlayerInformation? Ranking(int j) { int o = __p.__offset(6); return o != 0 ? (SF.Flat.TotalRankingPlayerInformation?)(new SF.Flat.TotalRankingPlayerInformation()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RankingLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<SF.Flat.Game.GetRankingListRes> CreateGetRankingListRes(FlatBufferBuilder builder,
      uint result = 0,
      VectorOffset rankingOffset = default(VectorOffset)) {
    builder.StartTable(2);
    GetRankingListRes.AddRanking(builder, rankingOffset);
    GetRankingListRes.AddResult(builder, result);
    return GetRankingListRes.EndGetRankingListRes(builder);
  }

  public static void StartGetRankingListRes(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddResult(FlatBufferBuilder builder, uint result) { builder.AddUint(0, result, 0); }
  public static void AddRanking(FlatBufferBuilder builder, VectorOffset rankingOffset) { builder.AddOffset(1, rankingOffset.Value, 0); }
  public static VectorOffset CreateRankingVector(FlatBufferBuilder builder, Offset<SF.Flat.TotalRankingPlayerInformation>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRankingVectorBlock(FlatBufferBuilder builder, Offset<SF.Flat.TotalRankingPlayerInformation>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRankingVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<SF.Flat.TotalRankingPlayerInformation>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateRankingVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<SF.Flat.TotalRankingPlayerInformation>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartRankingVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SF.Flat.Game.GetRankingListRes> EndGetRankingListRes(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.Game.GetRankingListRes>(o);
  }
}


static public class GetRankingListResVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Result*/, 4 /*uint*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*Ranking*/, SF.Flat.TotalRankingPlayerInformationVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
