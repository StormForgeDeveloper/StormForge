// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PartyChatMessageCmd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static PartyChatMessageCmd GetRootAsPartyChatMessageCmd(ByteBuffer _bb) { return GetRootAsPartyChatMessageCmd(_bb, new PartyChatMessageCmd()); }
  public static PartyChatMessageCmd GetRootAsPartyChatMessageCmd(ByteBuffer _bb, PartyChatMessageCmd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PartyChatMessageCmd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ChatMessage { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChatMessageBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetChatMessageBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetChatMessageArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<SF.Flat.Game.PartyChatMessageCmd> CreatePartyChatMessageCmd(FlatBufferBuilder builder,
      StringOffset chat_messageOffset = default(StringOffset)) {
    builder.StartTable(1);
    PartyChatMessageCmd.AddChatMessage(builder, chat_messageOffset);
    return PartyChatMessageCmd.EndPartyChatMessageCmd(builder);
  }

  public static void StartPartyChatMessageCmd(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddChatMessage(FlatBufferBuilder builder, StringOffset chatMessageOffset) { builder.AddOffset(0, chatMessageOffset.Value, 0); }
  public static Offset<SF.Flat.Game.PartyChatMessageCmd> EndPartyChatMessageCmd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.Game.PartyChatMessageCmd>(o);
  }
}


static public class PartyChatMessageCmdVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ChatMessage*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
