// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RequestPlayerStatusUpdateCmd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static RequestPlayerStatusUpdateCmd GetRootAsRequestPlayerStatusUpdateCmd(ByteBuffer _bb) { return GetRootAsRequestPlayerStatusUpdateCmd(_bb, new RequestPlayerStatusUpdateCmd()); }
  public static RequestPlayerStatusUpdateCmd GetRootAsRequestPlayerStatusUpdateCmd(ByteBuffer _bb, RequestPlayerStatusUpdateCmd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RequestPlayerStatusUpdateCmd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SF.Flat.AccountID? TargetPlayerId(int j) { int o = __p.__offset(4); return o != 0 ? (SF.Flat.AccountID?)(new SF.Flat.AccountID()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int TargetPlayerIdLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<SF.Flat.Game.RequestPlayerStatusUpdateCmd> CreateRequestPlayerStatusUpdateCmd(FlatBufferBuilder builder,
      VectorOffset target_player_idOffset = default(VectorOffset)) {
    builder.StartTable(1);
    RequestPlayerStatusUpdateCmd.AddTargetPlayerId(builder, target_player_idOffset);
    return RequestPlayerStatusUpdateCmd.EndRequestPlayerStatusUpdateCmd(builder);
  }

  public static void StartRequestPlayerStatusUpdateCmd(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTargetPlayerId(FlatBufferBuilder builder, VectorOffset targetPlayerIdOffset) { builder.AddOffset(0, targetPlayerIdOffset.Value, 0); }
  public static void StartTargetPlayerIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 8); }
  public static Offset<SF.Flat.Game.RequestPlayerStatusUpdateCmd> EndRequestPlayerStatusUpdateCmd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.Game.RequestPlayerStatusUpdateCmd>(o);
  }
}


static public class RequestPlayerStatusUpdateCmdVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfData(tablePos, 4 /*TargetPlayerId*/, 16 /*SF.Flat.AccountID*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
