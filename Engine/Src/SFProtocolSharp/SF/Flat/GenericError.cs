// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GenericError : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static GenericError GetRootAsGenericError(ByteBuffer _bb) { return GetRootAsGenericError(_bb, new GenericError()); }
  public static GenericError GetRootAsGenericError(ByteBuffer _bb, GenericError obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GenericError __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TransactionId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public int ResultCode { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Reason { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReasonBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetReasonBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetReasonArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<SF.Flat.GenericError> CreateGenericError(FlatBufferBuilder builder,
      ulong transaction_id = 0,
      int result_code = 0,
      StringOffset reasonOffset = default(StringOffset)) {
    builder.StartTable(3);
    GenericError.AddTransactionId(builder, transaction_id);
    GenericError.AddReason(builder, reasonOffset);
    GenericError.AddResultCode(builder, result_code);
    return GenericError.EndGenericError(builder);
  }

  public static void StartGenericError(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTransactionId(FlatBufferBuilder builder, ulong transactionId) { builder.AddUlong(0, transactionId, 0); }
  public static void AddResultCode(FlatBufferBuilder builder, int resultCode) { builder.AddInt(1, resultCode, 0); }
  public static void AddReason(FlatBufferBuilder builder, StringOffset reasonOffset) { builder.AddOffset(2, reasonOffset.Value, 0); }
  public static Offset<SF.Flat.GenericError> EndGenericError(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 8);  // reason
    return new Offset<SF.Flat.GenericError>(o);
  }
}


static public class GenericErrorVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TransactionId*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*ResultCode*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Reason*/, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
