// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MatchingQueueTicket : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public MatchingQueueTicket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong QueueUid { get { return __p.bb.GetUlong(__p.bb_pos + 0); } }
  public ulong QueueItemId { get { return __p.bb.GetUlong(__p.bb_pos + 8); } }

  public static Offset<SF.Flat.MatchingQueueTicket> CreateMatchingQueueTicket(FlatBufferBuilder builder, ulong QueueUid, ulong QueueItemId) {
    builder.Prep(8, 16);
    builder.PutUlong(QueueItemId);
    builder.PutUlong(QueueUid);
    return new Offset<SF.Flat.MatchingQueueTicket>(builder.Offset);
  }
}


}
