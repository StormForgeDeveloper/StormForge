// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Login
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct LoginRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static LoginRequest GetRootAsLoginRequest(ByteBuffer _bb) { return GetRootAsLoginRequest(_bb, new LoginRequest()); }
  public static LoginRequest GetRootAsLoginRequest(ByteBuffer _bb, LoginRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LoginRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public string Password { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPasswordBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPasswordArray() { return __p.__vector_as_array<byte>(6); }
  public string GameId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGameIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetGameIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetGameIdArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<SF.Flat.Login.LoginRequest> CreateLoginRequest(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset passwordOffset = default(StringOffset),
      StringOffset game_idOffset = default(StringOffset)) {
    builder.StartTable(3);
    LoginRequest.AddGameId(builder, game_idOffset);
    LoginRequest.AddPassword(builder, passwordOffset);
    LoginRequest.AddName(builder, nameOffset);
    return LoginRequest.EndLoginRequest(builder);
  }

  public static void StartLoginRequest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(1, passwordOffset.Value, 0); }
  public static void AddGameId(FlatBufferBuilder builder, StringOffset gameIdOffset) { builder.AddOffset(2, gameIdOffset.Value, 0); }
  public static Offset<SF.Flat.Login.LoginRequest> EndLoginRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // name
    builder.Required(o, 6);  // password
    builder.Required(o, 8);  // game_id
    return new Offset<SF.Flat.Login.LoginRequest>(o);
  }
}


static public class LoginRequestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, true)
      && verifier.VerifyString(tablePos, 6 /*Password*/, true)
      && verifier.VerifyString(tablePos, 8 /*GameId*/, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
