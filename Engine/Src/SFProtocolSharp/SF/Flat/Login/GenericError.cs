// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.Login
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GenericError : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static GenericError GetRootAsGenericError(ByteBuffer _bb) { return GetRootAsGenericError(_bb, new GenericError()); }
  public static GenericError GetRootAsGenericError(ByteBuffer _bb, GenericError obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GenericError __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Reason { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReasonBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetReasonBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetReasonArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<SF.Flat.Login.GenericError> CreateGenericError(FlatBufferBuilder builder,
      StringOffset reasonOffset = default(StringOffset)) {
    builder.StartTable(1);
    GenericError.AddReason(builder, reasonOffset);
    return GenericError.EndGenericError(builder);
  }

  public static void StartGenericError(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReason(FlatBufferBuilder builder, StringOffset reasonOffset) { builder.AddOffset(0, reasonOffset.Value, 0); }
  public static Offset<SF.Flat.Login.GenericError> EndGenericError(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // reason
    return new Offset<SF.Flat.Login.GenericError>(o);
  }
}


static public class GenericErrorVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Reason*/, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
