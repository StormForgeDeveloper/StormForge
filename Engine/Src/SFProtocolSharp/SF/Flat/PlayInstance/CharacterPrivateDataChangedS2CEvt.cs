// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat.PlayInstance
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterPrivateDataChangedS2CEvt : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
  public static CharacterPrivateDataChangedS2CEvt GetRootAsCharacterPrivateDataChangedS2CEvt(ByteBuffer _bb) { return GetRootAsCharacterPrivateDataChangedS2CEvt(_bb, new CharacterPrivateDataChangedS2CEvt()); }
  public static CharacterPrivateDataChangedS2CEvt GetRootAsCharacterPrivateDataChangedS2CEvt(ByteBuffer _bb, CharacterPrivateDataChangedS2CEvt obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterPrivateDataChangedS2CEvt __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong PlayInstanceUid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong PlayerId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint CharacterId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte PrivateData(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int PrivateDataLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrivateDataBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetPrivateDataBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetPrivateDataArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<SF.Flat.PlayInstance.CharacterPrivateDataChangedS2CEvt> CreateCharacterPrivateDataChangedS2CEvt(FlatBufferBuilder builder,
      ulong play_instance_uid = 0,
      ulong player_id = 0,
      uint character_id = 0,
      VectorOffset private_dataOffset = default(VectorOffset)) {
    builder.StartTable(4);
    CharacterPrivateDataChangedS2CEvt.AddPlayerId(builder, player_id);
    CharacterPrivateDataChangedS2CEvt.AddPlayInstanceUid(builder, play_instance_uid);
    CharacterPrivateDataChangedS2CEvt.AddPrivateData(builder, private_dataOffset);
    CharacterPrivateDataChangedS2CEvt.AddCharacterId(builder, character_id);
    return CharacterPrivateDataChangedS2CEvt.EndCharacterPrivateDataChangedS2CEvt(builder);
  }

  public static void StartCharacterPrivateDataChangedS2CEvt(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddPlayInstanceUid(FlatBufferBuilder builder, ulong playInstanceUid) { builder.AddUlong(0, playInstanceUid, 0); }
  public static void AddPlayerId(FlatBufferBuilder builder, ulong playerId) { builder.AddUlong(1, playerId, 0); }
  public static void AddCharacterId(FlatBufferBuilder builder, uint characterId) { builder.AddUint(2, characterId, 0); }
  public static void AddPrivateData(FlatBufferBuilder builder, VectorOffset privateDataOffset) { builder.AddOffset(3, privateDataOffset.Value, 0); }
  public static VectorOffset CreatePrivateDataVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreatePrivateDataVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePrivateDataVectorBlock(FlatBufferBuilder builder, ArraySegment<byte> data) { builder.StartVector(1, data.Count, 1); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePrivateDataVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<byte>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPrivateDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<SF.Flat.PlayInstance.CharacterPrivateDataChangedS2CEvt> EndCharacterPrivateDataChangedS2CEvt(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SF.Flat.PlayInstance.CharacterPrivateDataChangedS2CEvt>(o);
  }
}


static public class CharacterPrivateDataChangedS2CEvtVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*PlayInstanceUid*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*PlayerId*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*CharacterId*/, 4 /*uint*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*PrivateData*/, 1 /*byte*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
