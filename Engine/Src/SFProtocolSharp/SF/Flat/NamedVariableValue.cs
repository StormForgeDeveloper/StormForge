// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat
{

public enum NamedVariableValue : byte
{
  NONE = 0,
  NamedVariableString = 1,
  NamedVariableBool = 2,
  NamedVariableFloat = 3,
  NamedVariableDouble = 4,
  NamedVariableInt = 5,
  NamedVariableUInt = 6,
  NamedVariableInt64 = 7,
  NamedVariableUInt64 = 8,
  NamedVariableGuid = 9,
};



static public class NamedVariableValueVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
  {
    bool result = true;
    switch((NamedVariableValue)typeId)
    {
      case NamedVariableValue.NamedVariableString:
        result = SF.Flat.NamedVariableStringVerify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableBool:
        result = SF.Flat.NamedVariableBoolVerify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableFloat:
        result = SF.Flat.NamedVariableFloatVerify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableDouble:
        result = SF.Flat.NamedVariableDoubleVerify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableInt:
        result = SF.Flat.NamedVariableIntVerify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableUInt:
        result = SF.Flat.NamedVariableUIntVerify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableInt64:
        result = SF.Flat.NamedVariableInt64Verify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableUInt64:
        result = SF.Flat.NamedVariableUInt64Verify.Verify(verifier, tablePos);
        break;
      case NamedVariableValue.NamedVariableGuid:
        result = SF.Flat.NamedVariableGuidVerify.Verify(verifier, tablePos);
        break;
      default: result = true;
        break;
    }
    return result;
  }
}


}
