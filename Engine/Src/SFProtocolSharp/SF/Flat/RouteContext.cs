// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SF.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RouteContext : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public RouteContext __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SF.Flat.EntityUID From { get { return (new SF.Flat.EntityUID()).__assign(__p.bb_pos + 0, __p.bb); } }
  public SF.Flat.EntityUID To { get { return (new SF.Flat.EntityUID()).__assign(__p.bb_pos + 8, __p.bb); } }

  public static Offset<SF.Flat.RouteContext> CreateRouteContext(FlatBufferBuilder builder, uint from_EntityId, uint from_ServerId, uint to_EntityId, uint to_ServerId) {
    builder.Prep(4, 16);
    builder.Prep(4, 8);
    builder.PutUint(to_ServerId);
    builder.PutUint(to_EntityId);
    builder.Prep(4, 8);
    builder.PutUint(from_ServerId);
    builder.PutUint(from_EntityId);
    return new Offset<SF.Flat.RouteContext>(builder.Offset);
  }
}


}
