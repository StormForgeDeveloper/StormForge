////////////////////////////////////////////////////////////////////////////////
// 
// CopyRight (c) Kyungkun Ko
// 
// Author : KyungKun Ko
//
// Description : Autogenerated file, Svr
//
////////////////////////////////////////////////////////////////////////////////

using System;


namespace SF {
	public partial struct ResultCode {

		// Server service failed 
		public static readonly Result SVR_SERVICE_FAILED =                  new Result(unchecked((int)0xE7120000)); 

		// Timed out 
		public static readonly Result SVR_TIMEOUT =                         new Result(unchecked((int)0xE7120001)); 

		// Transaction has invalid state transition 
		public static readonly Result SVR_TRANSACTION_INVALID_STATE =       new Result(unchecked((int)0xE7120002)); 

		// Server Transaction timed out 
		public static readonly Result SVR_INVALID_TRANSITION =              new Result(unchecked((int)0xE7120003)); 

		// Transaction process Time out 
		public static readonly Result SVR_TRANSACTION_TIMEOUT =             new Result(unchecked((int)0xE7120004)); 

		// Failed to route message 
		public static readonly Result SVR_ROUTEMSG_FAILED =                 new Result(unchecked((int)0xE7120005)); 

		// No result handler 
		public static readonly Result SVR_NO_RESULT_HANDLER =               new Result(unchecked((int)0xE7120006)); 

		// No message handler 
		public static readonly Result SVR_NO_MESSAGE_HANDLER =              new Result(unchecked((int)0xE7120007)); 

		// Invalid server ID 
		public static readonly Result SVR_INVALID_SERVERID =                new Result(unchecked((int)0xE7120008)); 

		// Player not found 
		public static readonly Result SVR_PLAYER_NOT_FOUND =                new Result(unchecked((int)0xE7120009)); 

		// Player state is invalid 
		public static readonly Result SVR_INVALID_PLAYER_STATE =            new Result(unchecked((int)0xE712000A)); 

		// Invalid player game db data 
		public static readonly Result SVR_INVALID_PLAYER_GAMEDB =           new Result(unchecked((int)0xE712000B)); 

		// Not expected server message 
		public static readonly Result SVR_NOTEXPECTED_MESSAGE =             new Result(unchecked((int)0xE712000C)); 

		// Invalid entity UID 
		public static readonly Result SVR_INVALID_ENTITYUID =               new Result(unchecked((int)0xE712000D)); 

		// Cluster service not ready 
		public static readonly Result SVR_CLUSTER_NOTREADY =                new Result(unchecked((int)0xE712000E)); 

		// Invalid cluster type 
		public static readonly Result SVR_INVALID_CLUSTERTYPE =             new Result(unchecked((int)0xE712000F)); 

		// Invalid cluster ID 
		public static readonly Result SVR_INVALID_CLUSTERID =               new Result(unchecked((int)0xE7120010)); 

		// Invalid queue item 
		public static readonly Result SVR_INVALID_QUEUEITEM =               new Result(unchecked((int)0xE7120011)); 

		// Queue item is canceled 
		public static readonly Result SVR_QUEUEITEM_CANCELED =              new Result(unchecked((int)0xE7120012)); 

		// There is no item in queue 
		public static readonly Result SVR_NOITEM_INQUEUE =                  new Result(unchecked((int)0xE7120013)); 

		// Already in queue 
		public static readonly Result SVR_ALREADY_INQUEUE =                 new Result(unchecked((int)0xE7120014)); 

		// Queue item is reserved 
		public static readonly Result SVR_RESERVED_QUEUEITEM =              new Result(unchecked((int)0xE7120015)); 

		// Cluster doesn't have any assigned master 
		public static readonly Result SVR_CLUSTER_NOMASTER =                new Result(unchecked((int)0xE7120016)); 

		// Queue item is reserved for cancel 
		public static readonly Result SUCCESS_SVR_QUEUEITEM_CANCEL_PENDED = new Result(unchecked((int)0x27120017)); 

		// Purchase canceled 
		public static readonly Result SVR_PURCHASE_CANCELED =               new Result(unchecked((int)0xE7120018)); 

		// Invalid purchase info 
		public static readonly Result SVR_INVALID_PURCHASE_INFO =           new Result(unchecked((int)0xE7120019)); 

		// Invalid duplicated purchase 
		public static readonly Result SVR_INVALID_PURCHASE_DUPLICATED =     new Result(unchecked((int)0xE712001A)); 

		// External auth fail 
		public static readonly Result SVR_INVALID_EXTERNAL_AUTH =           new Result(unchecked((int)0xE712001B)); 

		// External server is not available 
		public static readonly Result SVR_EXTERNAL_SERVER_UNAVALIABLE =     new Result(unchecked((int)0xE712001C)); 

		// Invalid purchase result from server 
		public static readonly Result SVR_INVALID_PURCHASE_FORMAT =         new Result(unchecked((int)0xE712001D)); 

		// Invalid state transition 
		public static readonly Result SVR_INVALID_STATE =                   new Result(unchecked((int)0xE712001E)); 

		// Invalid purchase environment(public/test) 
		public static readonly Result SVR_INVALID_PURCHASE_MODE =           new Result(unchecked((int)0xE712001F)); 

		// Invalid Task group ID 
		public static readonly Result SVR_INVALID_TASK_GROUPID =            new Result(unchecked((int)0xE7120020)); 

		// The user's login token is invlaid 
		public static readonly Result SVR_INVALID_1STPARTY_LOGIN =          new Result(unchecked((int)0xE7120021)); 

	}
}



