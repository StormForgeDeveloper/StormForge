////////////////////////////////////////////////////////////////////////////////
// 
// CopyRight (c) Kyungkun Ko
// 
// Author : KyungKun Ko
//
// Description : Autogenerated file, DB
//
////////////////////////////////////////////////////////////////////////////////

using System;


namespace SF {
	public partial struct ResultCode {

		// Database connection failed 
		public static readonly Result DB_INVALID_CONFIG =                   new Result(unchecked((int)0xE7110000)); 

		// Database connection failed 
		public static readonly Result DB_CONNECTION_FAILED =                new Result(unchecked((int)0xE7110001)); 

		// Database connection lost 
		public static readonly Result DB_CONNECTION_LOST =                  new Result(unchecked((int)0xE7110002)); 

		// Database statement prepare is failed 
		public static readonly Result DB_STATEMENT_PREPARE_FAILED =         new Result(unchecked((int)0xE7110003)); 

		// Database parameter binding is failed 
		public static readonly Result DB_PARAMETER_BIND_FAILED =            new Result(unchecked((int)0xE7110004)); 

		// Database result patch is failed 
		public static readonly Result DB_RESULT_PATCH_FAILED =              new Result(unchecked((int)0xE7110005)); 

		// Database result column count is mismatched 
		public static readonly Result DB_RESULT_COUNT_MISMATCH =            new Result(unchecked((int)0xE7110006)); 

		// Database result column type is mismatched 
		public static readonly Result DB_RESULT_FIELDTYPE_MISMATCH =        new Result(unchecked((int)0xE7110007)); 

		// Duplicated Database source is specified 
		public static readonly Result DB_DUPLICATED_SOURCE =                new Result(unchecked((int)0xE7110008)); 

		// Invalid partitioning ID 
		public static readonly Result DB_INVALID_PARTITIONINGID =           new Result(unchecked((int)0xE7110009)); 

		// Database not connected 
		public static readonly Result DB_NOT_CONNECTED =                    new Result(unchecked((int)0xE711000A)); 

	}
}



