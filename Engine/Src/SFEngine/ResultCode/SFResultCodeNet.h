////////////////////////////////////////////////////////////////////////////////
// 
// CopyRight (c) 2016 Kyungkun Ko
// 
// Author : KyungKun Ko
//
// Description : Autogenerated header, Net
//
////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <stdint.h>



namespace SF {
	namespace ResultCode {



			// Network sequence already processed 
			constexpr Result 			SUCCESS_NET_PROCESSED_SEQUENCE                                     ((int32_t)0x27030000L);

			// The version not available or miss match with system. 
			constexpr Result 			NET_PROTOCOL_VERSION_MISMATCH                                      ((int32_t)0xE7030001L);

			// Network is not initialized 
			constexpr Result 			NET_NOTINITIALIZED                                                 ((int32_t)0xE7030002L);

			// The version not available or miss match with system. 
			constexpr Result 			NET_INVALID_NETCLASS                                               ((int32_t)0xE7030003L);

			// Not enough space in sliding window 
			constexpr Result 			NET_NOT_ENOUGH_WINDOWSPACE                                         ((int32_t)0xE7030004L);

			// Network IO aborted 
			constexpr Result 			NET_IO_ABORTED                                                     ((int32_t)0xE7030005L);

			// Network IO send failed 
			constexpr Result 			NET_IO_SEND_FAIL                                                   ((int32_t)0xE7030006L);

			// Network IO recv failed 
			constexpr Result 			NET_IO_RECV_FAIL                                                   ((int32_t)0xE7030007L);

			// Network send failed 
			constexpr Result 			NET_SEND_FAIL                                                      ((int32_t)0xE7030008L);

			// Network recv failed 
			constexpr Result 			NET_RECV_FAIL                                                      ((int32_t)0xE7030009L);

			// Network Message sequence is invalid 
			constexpr Result 			NET_INVALID_SEQUENCE                                               ((int32_t)0xE703000AL);

			// Network Message not expected bad packet size 
			constexpr Result 			NET_BADPACKET_SIZE                                                 ((int32_t)0xE703000BL);

			// Network connection closed 
			constexpr Result 			NET_CONNECTION_CLOSED                                              ((int32_t)0xE703000CL);

			// Network connection is never made 
			constexpr Result 			NET_NOT_CONNECTED                                                  ((int32_t)0xE703000DL);

			// Network connection ID is invalid 
			constexpr Result 			NET_INVALID_CID                                                    ((int32_t)0xE703000EL);

			// Network Connection timeout 
			constexpr Result 			NET_CONNECTION_TIMEOUT                                             ((int32_t)0xE703000FL);

			// Network connection is failed 
			constexpr Result 			NET_CONNECTION_FAIL                                                ((int32_t)0xE7030010L);

			// Too big packet data 
			constexpr Result 			NET_BADPACKET_TOOBIG                                               ((int32_t)0xE7030011L);

			// Network Message not expected bad packet 
			constexpr Result 			NET_BADPACKET_NOTEXPECTED                                          ((int32_t)0xE7030012L);

			// Checksum value of the message is invalid 
			constexpr Result 			NET_INVALID_MESSAGE_CHECKSUM                                       ((int32_t)0xE7030013L);

			// Message encryption is invalid 
			constexpr Result 			NET_INVALID_MESSAGE_ENCRYPTION                                     ((int32_t)0xE7030014L);

			// Invalid connection state 
			constexpr Result 			NET_INVALID_CONNECTION_STATE                                       ((int32_t)0xE7030015L);

			// Too big sequence id 
			constexpr Result 			NET_SEQUENCE_OVERFLOW                                              ((int32_t)0xE7030016L);

			// A blocking operation was interrupted by a call to WSACancelBlockingCall. 
			constexpr Result 			NET_INTR                                                           ((int32_t)0xE7030017L);

			// The file handle supplied is not valid. 
			constexpr Result 			NET_BADF                                                           ((int32_t)0xE7030018L);

			// An attempt was made to access a socket in a way forbidden by its access permissions 
			constexpr Result 			NET_ACCES                                                          ((int32_t)0xE7030019L);

			// The system detected an invalid pointer address in attempting to use a pointer argument in a call. 
			constexpr Result 			NET_FAULT                                                          ((int32_t)0xE703001AL);

			// An invalid argument was supplied. 
			constexpr Result 			NET_INVAL                                                          ((int32_t)0xE703001BL);

			// Too many open sockets. 
			constexpr Result 			NET_MFILE                                                          ((int32_t)0xE703001CL);

			// A non-blocking socket operation could not be completed immediately. 
			constexpr Result 			NET_WOULDBLOCK                                                     ((int32_t)0xE703001DL);

			// A blocking operation is currently executing. 
			constexpr Result 			NET_INPROGRESS                                                     ((int32_t)0xE703001EL);

			// An operation was attempted on a non-blocking socket that already had an operation in progress. 
			constexpr Result 			NET_ALREADY                                                        ((int32_t)0xE703001FL);

			// An operation was attempted on something that is not a socket. 
			constexpr Result 			NET_NOTSOCK                                                        ((int32_t)0xE7030020L);

			// A required address was omitted from an operation on a socket. 
			constexpr Result 			NET_DESTADDRREQ                                                    ((int32_t)0xE7030021L);

			// A socket operation encountered a dead network. 
			constexpr Result 			NET_NETDOWN                                                        ((int32_t)0xE7030022L);

			// A socket operation was attempted to an unreachable network. 
			constexpr Result 			NET_NETUNREACH                                                     ((int32_t)0xE7030023L);

			// The connection has been broken due to keep-alive activity detecting a failure while the operation was in progress. 
			constexpr Result 			NET_NETRESET                                                       ((int32_t)0xE7030024L);

			// An established connection was aborted by the software in your host machine. 
			constexpr Result 			NET_CONNABORTED                                                    ((int32_t)0xE7030025L);

			// An existing connection was forcibly closed by the remote host. 
			constexpr Result 			NET_CONNRESET                                                      ((int32_t)0xE7030026L);

			// An operation on a socket could not be performed because the system lacked sufficient buffer space or because a queue was full. 
			constexpr Result 			NET_NOBUFS                                                         ((int32_t)0xE7030027L);

			// A connect request was made on an already connected socket. 
			constexpr Result 			NET_ISCONN                                                         ((int32_t)0xE7030028L);

			// A request to send or receive data was disallowed because the socket is not connected and (when sending on a datagram socket using a sendto call) no address was supplied. 
			constexpr Result 			NET_NOTCONN                                                        ((int32_t)0xE7030029L);

			// A request to send or receive data was disallowed because the socket had already been shut down in that direction with a previous shutdown call. 
			constexpr Result 			NET_SHUTDOWN                                                       ((int32_t)0xE703002AL);

			// Too many references to some kernel object. 
			constexpr Result 			NET_TOOMANYREFS                                                    ((int32_t)0xE703002BL);

			// A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. 
			constexpr Result 			NET_TIMEDOUT                                                       ((int32_t)0xE703002CL);

			// No connection could be made because the target machine actively refused it. 
			constexpr Result 			NET_CONNECTION_REFUSSED                                            ((int32_t)0xE703002DL);

			// Cannot translate name. 
			constexpr Result 			NET_LOOP                                                           ((int32_t)0xE703002EL);

			// Name component or name was too long. 
			constexpr Result 			NET_NAMETOOLONG                                                    ((int32_t)0xE703002FL);

			// A socket operation failed because the destination host was down. 
			constexpr Result 			NET_HOSTDOWN                                                       ((int32_t)0xE7030030L);

			// A socket operation was attempted to an unreachable host. 
			constexpr Result 			NET_HOSTUNREACH                                                    ((int32_t)0xE7030031L);

			// Cannot remove a directory that is not empty. 
			constexpr Result 			NET_NOTEMPTY                                                       ((int32_t)0xE7030032L);

			// A Windows Sockets implementation may have a limit on the number of applications that may use it simultaneously. 
			constexpr Result 			NET_PROCLIM                                                        ((int32_t)0xE7030033L);

			// WSAStartup cannot function at this time because the underlying system it uses to provide network services is currently unavailable. 
			constexpr Result 			NET_SYSNOTREADY                                                    ((int32_t)0xE7030034L);

			// The Windows Sockets version requested is not supported. 
			constexpr Result 			NET_VERNOTSUPPORTED                                                ((int32_t)0xE7030035L);

			// Either the application has not called WSAStartup, or WSAStartup failed. 
			constexpr Result 			NET_NOTINITIALISED                                                 ((int32_t)0xE7030036L);

			// Returned by WSARecv or WSARecvFrom to indicate the remote party has initiated a graceful shutdown sequence. 
			constexpr Result 			NET_DISCON                                                         ((int32_t)0xE7030037L);

			// A system call has failed. 
			constexpr Result 			NET_SYSCALLFAILURE                                                 ((int32_t)0xE7030038L);

			// Host not found. 
			constexpr Result 			NET_HOST_NOT_FOUND                                                 ((int32_t)0xE7030039L);

			// Try again 
			constexpr Result 			NET_TRY_AGAIN                                                      ((int32_t)0xE703003AL);

			// IOPending 
			constexpr Result 			NET_IO_PENDING                                                     ((int32_t)0xE703003BL);

			// No such host is known securely. 
			constexpr Result 			NET_SECURE_HOST_NOT_FOUND                                          ((int32_t)0xE703003CL);

			// Protocol error 
			constexpr Result 			NET_PROTO                                                          ((int32_t)0xE703003DL);

			// Protocol wrong type for socket. 
			constexpr Result 			NET_PROTOTYPE                                                      ((int32_t)0xE703003EL);

			// Protocol not available 
			constexpr Result 			NET_NOPROTOOPT                                                     ((int32_t)0xE703003FL);

			// Machine is not on the network 
			constexpr Result 			NET_NONET                                                          ((int32_t)0xE7030040L);

			// Operation not supported on socket 
			constexpr Result 			NET_OPNOTSUPP                                                      ((int32_t)0xE7030041L);

			// An invalid value was provided for the ai_flags member of the pHints parameter. 
			constexpr Result 			NET_BADFLAGS                                                       ((int32_t)0xE7030042L);

			// Bad network family 
			constexpr Result 			NET_FAMILY                                                         ((int32_t)0xE7030043L);

			// The pServiceName parameter is not supported for the specified ai_socktype member of the pHints parameter. 
			constexpr Result 			NET_INVALID_SERVICE                                                ((int32_t)0xE7030044L);

			// Invalid network address 
			constexpr Result 			NET_INVALID_ADDRESS                                                ((int32_t)0xE7030045L);

			// Address in use 
			constexpr Result 			NET_ADDRINUSE                                                      ((int32_t)0xE7030046L);

			// Network Message not expected packet data 
			constexpr Result 			NET_BADPACKET                                                      ((int32_t)0xE7030047L);

			// Disconnected 
			constexpr Result 			NET_DISCONNECTED                                                   ((int32_t)0xE7030048L);

	void InitializeResultCodeNet();

	}//namespace ResultCode 
}//namespace SF 





